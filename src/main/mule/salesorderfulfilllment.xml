<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module" xmlns:salesforce-composite="http://www.mulesoft.org/schema/mule/salesforce-composite"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/salesforce-composite http://www.mulesoft.org/schema/mule/salesforce-composite/current/mule-salesforce-composite.xsd
http://www.mulesoft.org/schema/mule/xml-module http://www.mulesoft.org/schema/mule/xml-module/current/mule-xml-module.xsd">
	<flow name="sales_order_flow" doc:id="b11ca2f6-1918-4ebf-92e3-750e9f5f6942" >
		<scheduler doc:name="Scheduler" doc:id="c8e69f58-c1c5-452e-b0c8-7669f9cf6751" >
			<scheduling-strategy >
				<fixed-frequency frequency="30" timeUnit="MINUTES"/>
			</scheduling-strategy>
		</scheduler>
		<ee:transform doc:name="jobRun" doc:id="ed8a10d2-fe7f-4b5c-93c0-0d58642468cc">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="jobRun"><![CDATA[%dw 2.0
import * from dw::core::Strings

fun year(date) =
  (date as Date).year

fun dayOfyear(date) =
  (date as Date).dayOfYear

fun C_value(date) =
  floor((year(date) - 1900) / 100)

fun JulianDate(date) =
  {
    date: C_value(date) ++ (year(date) as String)[2 to 3] ++ leftPad(dayOfyear(date), 3, "0"),
    time: (((date.hour / 24) + (date.minutes / 1440) + (date.seconds / 86400)) splitBy ".")[-1]
  }
output application/json  
---
JulianDate(now())]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<os:retrieve doc:id="6fc4f4c2-9ddf-4f29-9bbd-d42ecbe85864" key="previousJobRun" target="previousJobRun" doc:name="Retrieve :previousJobRun">
			<os:default-value><![CDATA[#[vars.jobRun]]]></os:default-value>
		</os:retrieve>
		<flow-ref doc:name="Sales_order_Sub_Flow" doc:id="8e6c5f07-ae7e-41dc-aaba-235a06a40913" name="Sales_order_Sub_Flow" />
		<os:store doc:id="20362e6d-0d13-4d26-b652-a7f594c07671" key="previousJobRun" doc:name="Store current job run details">
			<os:value><![CDATA[#[vars.jobRun]]]></os:value>
		</os:store>
	</flow>
	<sub-flow name="Sales_order_Sub_Flow" doc:id="d81fe992-b1b1-44c9-a932-a248d0d8c60a" >
		<logger level="INFO" doc:name="Start Logger" doc:id="7d4ccb22-5292-427a-9682-d01a1c859f84" message='"Sales Order Fulfillment flow started"'/>
		<ee:transform doc:name="sql query" doc:id="79c17dfc-f864-4edc-ba32-9dce7e86c7b2" >
			<ee:message >
				<ee:set-payload resource="dwl/salesOrderQuery.dwl" />
			</ee:message>
		</ee:transform>
		<db:select doc:id="f1ef1742-a7da-4869-bebc-6180c7f06ade" config-ref="Database_Config" doc:name="execute sql query" >
			<db:sql ><![CDATA[#[payload]]]></db:sql>
		</db:select>
		<ee:transform doc:name="capture db payload" doc:id="475e3513-973f-4fde-9774-a6c6875bd5c6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json 
---
payload]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="emptyArray" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="salesforce payload" doc:id="15c1f51d-9c58-47e8-b4e8-c97df75d751f">
				<ee:message>
				<ee:set-payload resource="dwl/salesOrderDetails.dwl" />
				</ee:message>
			</ee:transform>
		<choice doc:name="Choice" doc:id="1df9bd52-7786-43a0-aaa7-69796e7e7704">
			<when expression="#[sizeOf(payload)&gt;0]">
				<logger level="INFO" doc:name="salesforce payload logger" doc:id="44a4a755-bdb8-4dd6-b4c3-ae3dad36b8de" message="#[payload]" />
				<logger level="INFO" doc:name="Total Records Logger" doc:id="90d5848f-045f-48b2-9e6b-707e105abb8d" message="Total Records available: #[sizeOf(payload)]" />
				<ee:transform doc:name="For Each Variable" doc:id="615020f5-b6af-4091-88b3-419c169d1f2b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(payload) filter ((item, index) -> !isEmpty(item."StandardOrder__c") )]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="FEPayload"><![CDATA[output application/json
---
{
   "salesOrderTotalSuccessRecords" : 0,
   "salesOrderTotalFailureRecords" : 0
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<logger level="INFO" doc:name="Distinct Records Logger" doc:id="04d0d8e2-274a-4d33-96d4-630f098ae2a9" message="Records available with StandardOrder: #[sizeOf(payload)]" />
				<flow-ref doc:name="compositeResponseFlow" doc:id="40bd6854-3921-4896-8c59-115a603cb2c4" name="compositeResponseFlow" />
				<ee:transform doc:name="Response Payload" doc:id="4d8cc77e-60b2-4de5-a6c0-3322b319f27a">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.FEPayload 
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<logger level="INFO" doc:name="End Logger" doc:id="3a230510-6368-43a5-a70b-1a4c057e5596" message='#[{"sales order fulfillment details end flow" : vars.FEPayload }]' />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="no input" doc:id="b948b8de-8556-483c-b214-a29210eb906f" message="no records are available to process" />
			</otherwise>
		</choice>
	</sub-flow>
	<flow name="compositeResponseFlow" doc:id="a99749ba-fa20-4fe5-9d48-e08c20082a92" >
		<foreach doc:name="For Each" doc:id="4a23a808-ecf1-4e25-b375-3c51f75d6a49" collection="#[payload]">
			<logger level="INFO" doc:name="Logger" doc:id="fa1f1dfe-6080-454e-a0a1-0b6e74a51238" message='#[{"message" : "before going to sf",&#10;"payload": payload&#10;}]' />
			<ee:transform doc:name="Transform Message" doc:id="8cc9dc1b-47ed-4c95-990b-5bbf797732e6" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="Id" ><![CDATA[%dw 2.0
output application/json
var lineC = payload.Line__c as String
---
"select id from Sales_Order_Fulfillment__c where Line__c = '$(lineC)'"]]></ee:set-variable>
					<ee:set-variable variableName="Line__c" ><![CDATA[%dw 2.0
output application/java
---
payload.Line__c as String]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<salesforce:query doc:name="Query" doc:id="c0162132-1c97-409f-8634-8d7a2fd17c03" target="salesforceId" config-ref="Salesforce_Config">
				<salesforce:salesforce-query ><![CDATA[#[vars.Id]]]></salesforce:salesforce-query>
			</salesforce:query>
			<ee:transform doc:name="composite Request" doc:id="89243db4-a614-4546-8876-e6da2c19d597">
				<ee:message>
					<ee:set-payload resource="dwl/salesCompositeRequest.dwl" />
				</ee:message>
			</ee:transform>
			<salesforce-composite:execute-composite-request doc:id="e0e17c1f-a1d3-4904-afbe-5b41ea80e4d6" config-ref="Salesforce_Composite_Config" doc:name="Execute composite request">
				<reconnect />
			</salesforce-composite:execute-composite-request>
			<choice doc:name="Choice" doc:id="28c0a703-decd-43b1-9cac-72954a99e713">
							<when expression='#[isEmpty((payload.compositeResponse filter ((item) -&gt; item.referenceId contains "refUpdateSalesOrderDetails") default "").body..message[0])]'>
								<ee:transform doc:name="Salesforce Response" doc:id="dd527544-7bb9-49f3-b143-d815999ce357">
				<ee:message />
				<ee:variables>
					<ee:set-variable variableName="FEPayload"><![CDATA[%dw 2.0
output application/json indent=false
var salesOrderRef = payload.compositeResponse filter ((item) -> item.referenceId contains "refUpdateSalesOrderDetails") default ""
---
if(salesOrderRef[0].httpStatusCode == 204)
("updated record succefully with Line___c: " ++ (vars.Line__c)) 
else 
("Created record succefully with Line___c: " ++ (vars.Line__c))
]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
								<logger level="INFO" doc:name="sf response" doc:id="ff1afc12-6a7d-4b79-9b74-4c0c2cb0c0f1" message="Counter No: #[vars.counter] SFResponse : #[vars.FEPayload]" />
							</when>
				<otherwise>
								<logger level="INFO" doc:name="sf response" doc:id="23167734-16b1-476a-a83e-9c87331ec19f" message='#[{"message":"error while sending to SF","reason":(payload.compositeResponse filter ((item) -&gt; item.referenceId contains "refUpdateSalesOrderDetails") default "").body..message}]' />
							</otherwise>
						</choice>
		</foreach>
	</flow>
</mule>
